{"name": "test_demo_form_payload[payload2]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Browser.new_context: options.isMobile is not supported in Firefox", "trace": "request = <SubRequest 'context' for <Function test_demo_form_payload[payload2]>>\npw = <playwright._impl._playwright.Playwright object at 0x00000294BD6CF0D0>\nbrowser = <Browser type=<BrowserType name=firefox executable_path=C:\\Users\\Admin\\AppData\\Local\\ms-playwright\\firefox-1482\\firefox\\firefox.exe> version=137.0>\nmobile = True\n\n    @pytest.fixture(scope=\"function\")\n    def context(request, pw, browser, mobile):\n        \"\"\"\n        Creates a new BrowserContext for each test.\n        - If --mobile=True, emulate iPhone 12.\n        - Otherwise, use desktop viewport 1280Ã—720 + custom UA.\n        Videos are recorded into ./test-videos/.\n        \"\"\"\n        # 5A) Ensure our output folder exists:\n        test_videos_dir = os.path.join(os.getcwd(), \"test-videos\")\n        os.makedirs(test_videos_dir, exist_ok=True)\n    \n        if mobile:\n            # Use Playwright's built-in iPhone 12 descriptor\n            device = pw.devices[\"iPhone 12\"]\n>           browser_context = browser.new_context(\n                **device,\n                record_video_dir=test_videos_dir\n            )\n\nconftest.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\sync_api\\_generated.py:13968: in new_context\n    self._sync(\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_browser.py:131: in new_context\n    channel = await self._channel.send(\"newContext\", params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000294BD6CE0B0>\ncb = <function Channel.send.<locals>.<lambda> at 0x00000294BDAAF130>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Browser.new_context: options.isMobile is not supported in Firefox\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:528: Error"}, "parameters": [{"name": "payload", "value": "{'firstname': 'Zak', 'lastname': 'Baba', 'phone': 'invalid_phone', 'email': 'not-an-email', 'company': 'Test company', 'enquiry': 'Landval', 'message': 'This is a test message, please ignore.', 'expect_success': False}"}], "start": 1748819301969, "stop": 1748819301969, "uuid": "ebf1a680-d11e-4b95-8fd2-f85e369507ab", "historyId": "ad21ec026cc64260a5e401ca0e36c478", "testCaseId": "70c5569d7f2410ca17197168f7428ddb", "fullName": "tests.test_request_demo_param#test_demo_form_payload", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_request_demo_param"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "15872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_request_demo_param"}]}