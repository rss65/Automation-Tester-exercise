{"name": "test_view_user_count", "status": "broken", "statusDetails": {"message": "ValueError: no option named 'browser'", "trace": "self = <_pytest.config.Config object at 0x000001F626D2CE20>, name = 'browser'\ndefault = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option. You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Fallback value if no option of that name is **declared** via :hook:`pytest_addoption`.\n            Note this parameter will be ignored when the option is **declared** even if the option's value is ``None``.\n        :param skip: If ``True``, raise :func:`pytest.skip` if option is undeclared or has a ``None`` value.\n            Note that even if ``True``, if a default was specified it will be returned instead of a skip.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\nE           AttributeError: 'Namespace' object has no attribute 'browser'\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\config\\__init__.py:1694: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\n.0 = <list_iterator object at 0x000001F62A13A3B0>\n\n    kwargs |= {\n>       arg: request.getfixturevalue(arg) for arg in get_required_args(context.step_func) if arg not in kwargs\n    }\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pytest_bdd\\scenario.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1071: in execute\n    raise exc.with_traceback(exc_tb)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:898: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nconftest.py:16: in browser_name\n    return pytestconfig.getoption(\"browser\") or \"chromium\"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <_pytest.config.Config object at 0x000001F626D2CE20>, name = 'browser'\ndefault = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default=notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option. You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Fallback value if no option of that name is **declared** via :hook:`pytest_addoption`.\n            Note this parameter will be ignored when the option is **declared** even if the option's value is ``None``.\n        :param skip: If ``True``, raise :func:`pytest.skip` if option is undeclared or has a ``None`` value.\n            Note that even if ``True``, if a default was specified it will be returned instead of a skip.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n            val = getattr(self.option, name)\n            if val is None and skip:\n                raise AttributeError(name)\n            return val\n        except AttributeError as e:\n            if default is not notset:\n                return default\n            if skip:\n                import pytest\n    \n                pytest.skip(f\"no {name!r} option found\")\n>           raise ValueError(f\"no option named {name!r}\") from e\nE           ValueError: no option named 'browser'\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\config\\__init__.py:1705: ValueError"}, "description": "C:\\Users\\Admin\\Downloads\\sds_automation_bdd\\features\\sds_site.feature: View user count", "start": 1748798281840, "stop": 1748798281840, "uuid": "738c6669-072e-4892-a708-4299ca3126dd", "historyId": "d03d37b0d5c932d413766c31c01735b9", "testCaseId": "d03d37b0d5c932d413766c31c01735b9", "fullName": "features.steps.test_sds_steps#test_view_user_count", "labels": [{"name": "parentSuite", "value": "features.steps"}, {"name": "suite", "value": "test_sds_steps"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "12004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "features.steps.test_sds_steps"}]}