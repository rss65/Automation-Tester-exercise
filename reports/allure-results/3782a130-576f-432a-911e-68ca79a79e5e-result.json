{"name": "test_request_a_landval_demo", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: Browser.new_context: options.isMobile is not supported in Firefox", "trace": ".0 = <list_iterator object at 0x00000294BDE7F7F0>\n\n    kwargs |= {\n>       arg: request.getfixturevalue(arg) for arg in get_required_args(context.step_func) if arg not in kwargs\n    }\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pytest_bdd\\scenario.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_callers.py:53: in run_old_style_hookwrapper\n    return result.get_result()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_callers.py:38: in run_old_style_hookwrapper\n    res = yield\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_callers.py:53: in run_old_style_hookwrapper\n    return result.get_result()\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\pluggy\\_callers.py:38: in run_old_style_hookwrapper\n    res = yield\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\setuponly.py:36: in pytest_fixture_setup\n    return (yield)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\nconftest.py:83: in context\n    browser_context = browser.new_context(\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\sync_api\\_generated.py:13968: in new_context\n    self._sync(\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_browser.py:131: in new_context\n    channel = await self._channel.send(\"newContext\", params)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000294BD6CE0B0>\ncb = <function Channel.send.<locals>.<lambda> at 0x00000294BD58C790>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.Error: Browser.new_context: options.isMobile is not supported in Firefox\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:528: Error"}, "description": "C:\\Users\\Admin\\Downloads\\sds_automation_bdd\\features\\sds_site.feature: Request a Landval demo", "start": 1748819301492, "stop": 1748819301502, "uuid": "264a24e9-8f8d-4698-90a4-18f555ecf283", "historyId": "2302943fcdc544b9e0f7f05cd5d2f866", "testCaseId": "2302943fcdc544b9e0f7f05cd5d2f866", "fullName": "features.steps.test_sds_steps#test_request_a_landval_demo", "labels": [{"name": "parentSuite", "value": "features.steps"}, {"name": "suite", "value": "test_sds_steps"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "15872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "features.steps.test_sds_steps"}]}